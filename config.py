# -*- coding: utf-8 -*-

"""
File for dealing with the configuration of wxPi.py.
"""

import os
import re

__version__ = '0.1'
__all__ = ['CONFIG_FILE', 'loadConfig', '__version__', '__all__']


# Files
## Base path for the various files needed/generated by wxPi.py
_BASE_PATH = os.path.dirname(os.path.abspath(__file__))

## Wunderground Configuration
CONFIG_FILE = os.path.join(_BASE_PATH, 'wxPi.config')


def loadConfig(filename):
	"""
	Read in the configuration file and return a dictionary of the 
	parameters.
	"""
	
	# RegEx for parsing the configuration file lines
	configRE = re.compile(r'\s*:\s*')

	# Initial values
	config = {'verbose': False,
			  'radioPin': 18, 
			  'duration': 60.0, 
			  'includeIndoor': False, 
			  'elevation': 0.0, 
			  'enableBMP085': True, 
			  'redPin': -1, 
			  'yellowPin': -1, 
			  'greenPin': -1}

	# Parse the file
	try:
		fh = open(filename, 'r')
		for line in fh:
			line = line.replace('\n', '')
			## Skip blank lines
			if len(line) < 3:
				continue
			## Skip comments
			if line[0] == '#':
				continue
				
			## Update the dictionary
			key, value = configRE.split(line, 1)
			config[key] = value
		fh.close()
		
		# Integer type conversions
		for key in ('radioPin', 'redPin', 'yellowPin', 'greenPin'):
			config[key] = int(config[key])
			
		# Float type conversion
		for key in ('duration', 'elevation'):
			config[key] = float(config[key])
			
		# Boolean type conversions
		for key in ('verbose', 'includeIndoor', 'enableBMP085'):
			config[key] = bool(config[key])
			
	except IOError:
		pass
		
	# Done
	return config
